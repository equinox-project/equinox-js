"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting started","href":"/equinox-js/docs/intro","docId":"intro"},{"type":"category","label":"Core concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Category","href":"/equinox-js/docs/core-concepts/category","docId":"core-concepts/category"},{"type":"link","label":"Stream","href":"/equinox-js/docs/core-concepts/stream","docId":"core-concepts/stream"},{"type":"link","label":"Decider","href":"/equinox-js/docs/core-concepts/decider","docId":"core-concepts/decider"},{"type":"link","label":"Codec","href":"/equinox-js/docs/core-concepts/codec","docId":"core-concepts/codec"},{"type":"link","label":"Caching","href":"/equinox-js/docs/core-concepts/caching","docId":"core-concepts/caching"}]},{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Bank Account","href":"/equinox-js/docs/examples/bank-account","docId":"examples/bank-account"},{"type":"link","label":"Contact preferences","href":"/equinox-js/docs/examples/contact-preferences","docId":"examples/contact-preferences"},{"type":"link","label":"Hotel","href":"/equinox-js/docs/examples/hotel","docId":"examples/hotel"},{"type":"link","label":"Invoice","href":"/equinox-js/docs/examples/invoice","docId":"examples/invoice"}]},{"type":"category","label":"Stores","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"MessageDB","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Access Strategies","href":"/equinox-js/docs/stores/message-db/access-strategies","docId":"stores/message-db/access-strategies"}],"href":"/equinox-js/docs/stores/message-db/"}]}]},"docs":{"core-concepts/caching":{"id":"core-concepts/caching","title":"Caching","description":"Out of the box EquinoxJS supports a few strategies for caching. Caching in this context means that we\'ll keep","sidebar":"tutorialSidebar"},"core-concepts/category":{"id":"core-concepts/category","title":"Category","description":"In event sourcing, a category is a grouping of related streams that share events of the same schema with consistent","sidebar":"tutorialSidebar"},"core-concepts/codec":{"id":"core-concepts/codec","title":"Codec","description":"It is common in TypeScript applications to use JSON.stringify and JSON.parse indiscriminately. In the context of","sidebar":"tutorialSidebar"},"core-concepts/decider":{"id":"core-concepts/decider","title":"Decider","description":"In event sourcing a Decider is responsible for mapping an intent and previous history to new events. This is slightly","sidebar":"tutorialSidebar"},"core-concepts/stream":{"id":"core-concepts/stream","title":"Stream","description":"Streams are the fundamental unit of organization of event sourced systems, providing a sequence of events that represent","sidebar":"tutorialSidebar"},"examples/bank-account":{"id":"examples/bank-account","title":"Bank Account","description":"","sidebar":"tutorialSidebar"},"examples/contact-preferences":{"id":"examples/contact-preferences","title":"Contact preferences","description":"This decider is used in integration tests for MessageDb and DynamoStore","sidebar":"tutorialSidebar"},"examples/hotel":{"id":"examples/hotel","title":"Hotel","description":"Note","sidebar":"tutorialSidebar"},"examples/invoice":{"id":"examples/invoice","title":"Invoice","description":"Based on the blog post on The Equinox Programming Model","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Getting started","description":"EquinoxJS is a ground-up re-implementation of the Equinox project, an F# event sourcing library. It provides a","sidebar":"tutorialSidebar"},"stores/message-db/access-strategies":{"id":"stores/message-db/access-strategies","title":"Access Strategies","description":"The first, and likely most used access strategy is the unoptimized one. It\'ll not apply any optimised reading logic.","sidebar":"tutorialSidebar"},"stores/message-db/index":{"id":"stores/message-db/index","title":"MessageDB","description":"MessageDB is a fully-featured event store and message store implemented in PostgreSQL for Pub/Sub, Event Sourcing,","sidebar":"tutorialSidebar"}}}')}}]);