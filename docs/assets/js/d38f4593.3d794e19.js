"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[698],{7522:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(9901);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(s,".").concat(u)]||d[u]||h[u]||o;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4784:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7364),a=(n(9901),n(7522));const o={},i="Caching",c={unversionedId:"core-concepts/caching",id:"core-concepts/caching",title:"Caching",description:"Out of the box EquinoxJS supports a few strategies for caching. Caching in this context means that we'll keep",source:"@site/docs/core-concepts/caching.md",sourceDirName:"core-concepts",slug:"/core-concepts/caching",permalink:"/equinox-js/docs/core-concepts/caching",draft:!1,editUrl:"https://github.com/nordfjord/equinox-js/tree/main/apps/docs/docs/core-concepts/caching.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Codec",permalink:"/equinox-js/docs/core-concepts/codec"},next:{title:"Identifiers",permalink:"/equinox-js/docs/core-concepts/identifiers"}},s={},p=[],l={toc:p},d="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"caching"},"Caching"),(0,a.kt)("p",null,"Out of the box EquinoxJS supports a few strategies for caching. Caching in this context means that we'll keep\na record of aggregate state and it's version in memory. The ",(0,a.kt)("inlineCode",{parentName:"p"},"MemoryCache")," included in the core library is a simple\nLRU cache which can keep up to a million states (configurable)."),(0,a.kt)("p",null,"On top of the cache we have a few Caching strategies to choose from"),(0,a.kt)("h1",{id:"nocaching"},"NoCaching"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { CachingStrategy } from "@equinox-js/core"\nconst strategy = CachingStrategy.noCache()\n')),(0,a.kt)("p",null,"No caching is applied. This necessitates a fresh load of the entire stream for every interaction with the\nstore."),(0,a.kt)("h1",{id:"slidingwindowcache-ms-prefix"},"SlidingWindow(cache, ms, ?prefix)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { CachingStrategy, MemoryCache } from "@equinox-js/core"\nconst cache = new MemoryCache()\nconst strategy = CachingStrategy.slidingWindow(cache, 20 * 60 * 1000)\n')),(0,a.kt)("p",null,"Retain a single ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," per ",(0,a.kt)("inlineCode",{parentName:"p"},"stream_name"),".\nEach cache hit for a stream renews the retention period for the defined ",(0,a.kt)("inlineCode",{parentName:"p"},"ms"),".\nUpon expiration of the defined ",(0,a.kt)("inlineCode",{parentName:"p"},"ms")," from the point at which the cache was entry was last used, a full reload is\ntriggered.\nUnless ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadOption.AllowStale")," is used, each cache hit still incurs a roundtrip to load any subsequently-added events."),(0,a.kt)("p",null,"Prefix is used to segregate multiple folds per stream when they are stored in the cache. "),(0,a.kt)("h1",{id:"fixedtimespancache-periodms"},"FixedTimeSpan(cache, periodMs)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { CachingStrategy, MemoryCache } from "@equinox-js/core"\nconst cache = new MemoryCache()\nconst strategy = CachingStrategy.fixedTimeSpan(cache, 20 * 60 * 1000)\n')),(0,a.kt)("p",null,"Retain a single ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," per ",(0,a.kt)("inlineCode",{parentName:"p"},"stream_name"),".\nUpon expiration of the defined ",(0,a.kt)("inlineCode",{parentName:"p"},"periodMs"),", a full reload is triggered.\nUnless ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadOption.AllowStale")," is used, each cache hit still incurs a roundtrip to load any subsequently-added events."),(0,a.kt)("p",null,"Prefix is used to segregate multiple folds per stream when they are stored in the cache."))}h.isMDXComponent=!0}}]);