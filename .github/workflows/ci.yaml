name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

env:
  # AWS Credentials
  AWS_ACCESS_KEY_ID: local
  AWS_SECRET_ACCESS_KEY: local
  AWS_DEFAULT_REGION: local
  AWS_REGION: local

jobs:
  build-test-lint:
    name: Build, test, lint
    runs-on: ubuntu-latest
    services:
      message_db:
        image: "postgres"
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      dynamo:
        image: "amazon/dynamodb-local:latest"
        ports:
          - "8000:8000"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node setup
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: enable corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Install direnv
        run: |
          mkdir -p ~/.local/bin
          curl -sfL https://direnv.net/install.sh | bash
          direnv allow
          (cd ./apps/example && direnv allow)
          (cd ./apps/hotel && direnv allow)
          direnv export gha > $GITHUB_ENV

      - name: Build
        run: pnpm dlx turbo build

      - name: Set up message_db
        env:
          PGHOST: localhost
          PGPORT: "5432"
          PGUSER: postgres
          PGPASSWORD: postgres
        run: ./scripts/bootstrap.sh

      - name: Test
        env:
          DBURL: postgresql://equinox_example:@localhost:5432/equinox_example
          DBURL_RO: postgresql://equinox_example:@localhost:5432/equinox_example
        run: pnpm dlx turbo test

      - name: Lint
        run: pnpm dlx turbo lint
