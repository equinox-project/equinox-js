name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

env:
  # AWS Credentials
  AWS_ACCESS_KEY_ID: local
  AWS_SECRET_ACCESS_KEY: local
  AWS_DEFAULT_REGION: local
  AWS_REGION: local

jobs:
  build-test-lint:
    name: Build, test, lint
    runs-on: ubuntu-latest
    services:
      message_db:
        image: 'postgres'
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      dynamo:
        image: "amazon/dynamodb-local:latest"
        ports:
          - "8000:8000"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Node setup
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Build
        run: pnpm dlx turbo build

      - name: Set up message_db
        env:
          PGHOST: localhost
          PGPORT: '5432'
          PGUSER: postgres
          PGPASSWORD: postgres
          MDB_VERSION: 1.3.0
        run: |
          mkdir -p /tmp/mdb
          curl -sL -o /tmp/message_db.tar.gz https://github.com/message-db/message-db/archive/refs/tags/v$MDB_VERSION.tar.gz
          tar -xf /tmp/message_db.tar.gz --directory /tmp/mdb
          (cd /tmp/mdb/message-db-$MDB_VERSION/database && ./install.sh)

      - name: Set up example
        working-directory: ./apps/example
        run: |
          pnpm create-db
          pnpm migrate:message-db
          pnpm migrate

      - name: Test
        run: pnpm dlx turbo test

      - name: Lint
        run: pnpm dlx turbo lint

